"use strict";

const Point = require("./Point");
const PointHandler = require("./PointHandler");
const Rectangle = require("./Rectangle");
let frstPoint = new Point("A", 5, 5);
let scndPoint = new Point("B", 2, 2);
let thrdPoint = new Point("C", -1, 1);
let frthPoint = new Point("D", 1, -1);
let fifthPoint = new Point("E", 5, -5);
let sixthPoint = new Point("F", 10, 10);
let Points = new PointHandler();
Points.CREATE(frstPoint);
Points.CREATE(scndPoint);
Points.CREATE(thrdPoint);
Points.CREATE(frthPoint);
Points.CREATE(fifthPoint);
Points.CREATE(sixthPoint);
Points.READ("A");
Points.READ("B");
Points.READ("C");
Points.READ("D");
Points.READ("E");
Points.READ("F");
console.log("\n");
Points.UPDATE("B", -2, -2);
Points.READ("B");
console.log("\n");
Points.DELETE("F");
console.log(Points.Points);
console.log("\n");
Points.findMaxDistance();
console.log("\n");
Points.findPointsByNewPoint(0, 0, 4);
console.log("\n");
Points.findPointsAboutGivenAxis(0);
Points.findPointsAboutGivenAxis(1);
console.log("\n");
let firstVertex = new Point("", -4, 4);
let secondVertex = new Point("", 4, 4);
let thirdVertex = new Point("", 4, -4);
let fourthVertex = new Point("", -4, -4);
let curRect = new Rectangle(firstVertex, secondVertex, thirdVertex, fourthVertex);
Points.findPointsInrectangle(curRect);